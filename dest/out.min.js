//Set up the module with dependencies
angular.module("ChatApp", ['ngRoute']);
var socket = io.connect('http://localhost:8080');

angular.module("ChatApp").config(["$routeProvider", function($routeProvider){
	$routeProvider.when("/", {
		templateUrl: "views/Login.html",
		controller: "LoginCtrl"
	}).when("/Home", {
		templateUrl: "views/Home.html",
		controller: "HomeCtrl"
	}).otherwise({redirectTo: "/"});
}]);;angular.module("ChatApp").factory("Globals", [function(){
	var userName = "";
	var socket;
	
	return {
		setUserName: function(u){
			userName = u;
		},
		setSocket: function(s){
			socket = s;
		},
		
		getUserName: function(){
			return userName;
		},
		getSocket: function(){
			return socket;
		}
	};
}]);;angular.module("ChatApp").controller("LoginCtrl", 
	["$scope", "$location", function($scope, $location){
	
	$scope.userName = "";
	$scope.errorMessage = "";
	
	//Connects the user to the app
	$scope.connect = function() {
		socket.emit("adduser", $scope.userName, function(available){
			if(available){
				if($scope.userName === ""){
					$scope.errorMessage = "Please select a user name:";
					$scope.$apply();
				}
				else
				{
					//The user name is not taken
					console.log("Name available");
					$scope.errorMessage = "";
					
					//TODO: Add the user and other setup before leaving
					$location.path("/Home");
					$scope.$apply();
					
					
				}
			}
			else{
				//The user name is taken or something else is wrong
				console.log("Username taken error");
				if($scope.userName === ""){
					$scope.errorMessage = "Please select a user name";
					$scope.$apply();
				}
				else{
					$scope.errorMessage = "That user name is already taken!";
					$scope.$apply();
				}
			}
		});
	};
}]);;angular.module("ChatApp").controller("HomeCtrl", 
	["$scope", "$routeParams", "$location", function($scope, $location){
	$scope.chatRooms=[];
	getChatRooms();
	
	socket.on("roomlist", function(rooms){
		$scope.chatRooms = rooms;
		console.log($scope.chatRooms);
		
		$scope.$apply();
	});
	
	function getChatRooms(){
		socket.emit("rooms");
	}
	
	
	
	
}]);